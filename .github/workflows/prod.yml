name: Build, Test and Deploy to Prod

on:
  push:
    branches:
      - main

env:
  BRAWL_STARS_TOKEN: ${{ secrets.BRAWL_STARS_TOKEN }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Cache dependencies
      uses: actions/cache@v4.0.0
      with:
        path: |
          ~/.cargo
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        profile: minimal
        toolchain: stable

    - name: Install Python (for bracket generation)
      uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.12


    - name: Build and test code
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/bake-action@v4.1.0
      with:
        push: true
        files: docker-compose.yml
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy docker-compose.yml to droplet
      run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          docker-compose down
          docker-compose pull
          docker-compose up -d