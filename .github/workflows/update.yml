name: Build, Test and Deploy to Digital Ocean

on:
  push:
    branches:
      - main

env:
  BRAWL_STARS_TOKEN: ${{ secrets.BRAWL_STARS_TOKEN }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  REGISTRY: registry.digitalocean.com/dbc-bot
  IMAGE_NAME: dbc-bot 

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Cache dependencies
      uses: actions/cache@v4.0.0
      with:
        path: |
          ~/.cargo
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        profile: minimal
        toolchain: stable

    - name: Build and test code
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Build container image
      run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_TOKEN }}
  
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200
    
    - name: Remove all old images
      run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Create .env file on droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DO_TOKEN }},GITHUB_SHA
          script: |
            cd ~
            echo "BRAWL_STARS_TOKEN=${{ secrets.BRAWL_STARS_TOKEN }}" > ~/.env
            echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> ~/.env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ~/.env
            docker login -u ${{ secrets.DO_TOKEN  }} -p ${{ secrets.DO_TOKEN  }} registry.digitalocean.com
            docker stop $(echo $IMAGE_NAME)
            docker rm $(echo $IMAGE_NAME)
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)