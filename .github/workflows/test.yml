name: Build, Test and Deploy to Test

on:
  push:
    branches:
      - test2

env:
  BRAWL_STARS_TOKEN: ${{ secrets.BRAWL_STARS_TOKEN }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  # update-docker-compose:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4.1.1

  #     - name: Replace Docker username in docker-compose.yml
  #       run: |
  #         sed -i "s/MY_DOCKER_USERNAME/${{ secrets.DOCKER_USERNAME }}/g" docker-compose.yml

  #     - name: Acknowledge branch
  #       run: git checkout test2
        
  #     - name: Commit changes
  #       run: |
  #         git config --global user.email "actions@github.com"
  #         git config --global user.name "GitHub Actions"
  #         git add docker-compose.yml
  #         git commit -m "Update Docker username in docker-compose.yml"
      
  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: test2

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    # - name: Cache dependencies
    #   uses: actions/cache@v4.0.0
    #   with:
    #     path: |
    #       ~/.cargo
    #       target/
    #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    #     restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        profile: minimal
        toolchain: stable

    - name: Install Python (for bracket generation)
      uses: actions/setup-python@v5.0.0
      with:
        python-version: 3.12
    
    - name: Install Python dependecies
      run: pip install -r requirements.txt

    - name: Build and test code
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.0.0
      # env:
      #   DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Log in to Docker Hub
    #   run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker image
      run: docker build -t dbc-bot .

                  
    - name: Docker Setup Buildx        
      uses: docker/setup-buildx-action@v3.0.0

    - name: Build and push Docker image
      run: |
        set -ex
        PARENT_DIR=$(basename "${PWD%/*}")
        CURRENT_DIR="${PWD##*/}"
        IMAGE_NAME="$PARENT_DIR/$CURRENT_DIR"
        TAG="${GITHUB_SHA::7}"
        REGISTRY="hub.docker.com"
        docker build -t ${REGISTRY}/${IMAGE_NAME}:${TAG} -t ${REGISTRY}/${IMAGE_NAME}:latest .
        docker push ${REGISTRY}/${IMAGE_NAME}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy docker-compose.yml to droplet
      run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          docker-compose down
          docker-compose pull
          docker-compose up -d